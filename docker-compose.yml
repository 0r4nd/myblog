
services:

  db:
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    restart: unless-stopped
    ports:
      - 8001:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin/
    depends_on:
      db:
        condition: service_healthy


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uvicorn backend.app.main:app --reload --proxy-headers --log-level debug --host 0.0.0.0 --port 8000
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT_INTERNAL}
    depends_on:
      db:
        condition: service_healthy
    environment:
      - WATCHFILES_FORCE_POLLING=true # live-reload for backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: yarn run start
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
      #- ./static:/var/www/static
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT_INTERNAL}
    depends_on:
      - backend
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true # live-reload for frontend

  #nginx:
  #  image: nginx:1.27-alpine
  #  restart: unless-stopped
  #  volumes:
  #    - ./static:/var/www/static
  #    #- ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf
  #    #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #    #- ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #    #- ./nginx/html:/var/www/html
  #    - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
  #  ports:
  #    - 8080:80   # http
  #    - 443:443 # https
  #  depends_on:
  #    - frontend

volumes:
  pgdata:
  pgadmin:
