
services:


  db:
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s

  #mailhog:
  #  image: mailhog/mailhog
  #  restart: unless-stopped
  #  logging:
  #    driver: 'none'
  #  ports:
  #    - 1025:1025
  #    - 8025:8025

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uvicorn backend.app.main:app --forwarded-allow-ips '*' --reload --proxy-headers --log-level debug --host 0.0.0.0 --port 8000
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT_INTERNAL}
    depends_on:
      #mailhog:
      db:
        condition: service_healthy
    environment:
      - WATCHFILES_FORCE_POLLING=true # live-reload for backend


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: yarn run start
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
      #- ./static:/var/www/static
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT_INTERNAL}
    depends_on:
      - backend
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true # live-reload for frontend
      - API_URL=${API_URL}

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    volumes:
      #- ./proxy/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./proxy/nginx/templates/default.conf:/etc/nginx/templates/default.conf.template
      #- ./proxy/ssl/:/etc/ssl/:ro # unused for now
      - ./uploads:/var/uploads
    ports:
      - 80:80   # http
      - 443:443 # https
    depends_on:
      - frontend
    environment:
        # env for nginx: https://stackoverflow.com/a/62844707
        API_URL: ${API_URL}


  pgadmin:
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    restart: unless-stopped
    ports:
      - 8001:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin/
    depends_on:
      db:
        condition: service_healthy


volumes:
  pgdata:
  pgadmin:
